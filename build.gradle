plugins {
  id 'java'

  id 'org.springframework.boot' version '2.3.0.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'

  id 'info.solidsoft.pitest' version '1.5.1'
  id 'com.dorongold.task-tree' version '1.5'

  id 'com.gorylenko.gradle-git-properties' version '2.2.2'
}

/* Integration Tests */
apply from: "$rootDir/integration-test.gradle"

java {
  sourceCompatibility = JavaVersion.VERSION_14
  targetCompatibility = JavaVersion.VERSION_14
}

repositories {
  mavenCentral()
  jcenter()
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

dependencies {
  /* Lombok */
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  /* Spring */
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }

  /* Data */
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-batch'
  runtimeOnly 'org.flywaydb:flyway-core'
  runtimeOnly 'org.postgresql:postgresql'

  /* MQ */
  implementation 'org.springframework.boot:spring-boot-starter-amqp'

  /* Either/Functional functions */
  implementation 'io.vavr:vavr:0.9.0'

  /* Prometheus */
  runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

  /* Spring/OpenApi */
  implementation 'org.springdoc:springdoc-openapi-ui:1.3.9'
}

test {
  useJUnitPlatform()
  testLogging {
    events = ['FAILED', 'PASSED', 'SKIPPED', 'STANDARD_OUT']
  }
}

pitest {
  targetClasses = ['demo.boot.*']
  junit5PluginVersion = '0.12'
  timestampedReports = false
}

bootRun {
  doFirst {
    file("$rootDir/.env")
      .readLines()
      .findAll({ line -> !line.isBlank() && !line.startsWith("#") })
      .each() {
        def (key, value) = it.split('=', 2)
        environment key, value
      }
  }
}

bootJar {
  layered()
}
